- alias: "hoch odna rule"
  trigger:
    - seconds: /10
      platform: time_pattern

    - platform: state
      entity_id:
        - input_boolean.kitchen_btn
        - input_boolean.spalnya_btn
        - input_boolean.maysternya_btn
        - input_boolean.vanna_btn
        - input_boolean.velika_btn
        - input_boolean.ani_btn
        - input_boolean.koridor_btn

  action:
    entity_id:
      - input_boolean.hoch_odna
    service: >-
      {% if 
      is_state('input_boolean.kitchen_btn','on') or
      is_state('input_boolean.spalnya_btn','on') or
      is_state('input_boolean.maysternya_btn','on') or
      is_state('input_boolean.vanna_btn','on') or
      is_state('input_boolean.velika_btn','on') or
      is_state('input_boolean.ani_btn','on') or
      is_state('input_boolean.koridor_btn','on') 
       %}
      input_boolean.turn_on
      {% else %} 
      input_boolean.turn_off
      {% endif %}

- alias: "relay gazoviy kotel by timer"
  trigger:
    - minutes: /30
      # - seconds: /5
      platform: time_pattern

    - platform: state
      entity_id:
        - input_boolean.kotel_haz_eko

  action:
    entity_id:
      - switch.switch_relay_v2_d12
    service: >-
      {% if
      is_state('input_boolean.kotel_haz_on_off','on') and 
      is_state('input_boolean.kotel_haz_eko','on') and
      is_state('input_boolean.hoch_odna','on') 
       %}
       {% if 
        is_state('switch.switch_relay_v2_d12','off') 
        %}
        switch.turn_on
        {% else %} 
        switch.turn_off
        {% endif %}
      {% else %} 
        {% if 
        is_state('input_boolean.kotel_haz_on_off','on') and
        is_state('input_boolean.hoch_odna','on') 
        %}
        switch.turn_on
        {% else %} 
        switch.turn_off
        {% endif %}
      {% endif %}

- alias: "relay elektichniy kotel by timer"
  trigger:
    - minutes: /10
      platform: time_pattern

  action:
    entity_id:
      - switch.switch_relay_v2_d1
    service: >-
      {% if 
      is_state('input_boolean.kotel_elektrika_on_off','on') and
      is_state('input_boolean.hoch_odna','on') 
       %}
      switch.turn_on
      {% else %} 
      switch.turn_off
      {% endif %}

- alias: "логіка роботи насосу"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.hoch_odna
        - input_boolean.kotel_haz_on_off
        - input_boolean.kotel_elektrika_on_off
  action:
    entity_id:
      - switch.switch_relay_v2_d3
    service: >
      {% if is_state('input_boolean.hoch_odna', 'on') and is_state('input_boolean.kotel_haz_on_off', 'on') or is_state('input_boolean.hoch_odna', 'on') and is_state('input_boolean.kotel_elektrika_on_off', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "якщо вкл газовий виключити електричний"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.kotel_haz_on_off
  action:
    entity_id:
      - input_boolean.kotel_elektrika_on_off
    service: >
      {% if is_state('input_boolean.kotel_haz_on_off', 'on') %}
      input_boolean.turn_off
      {% endif %}

- alias: "якщо вкл електричний виключити газовий"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.kotel_elektrika_on_off
  action:
    entity_id:
      - input_boolean.kotel_haz_on_off
    service: >
      {% if is_state('input_boolean.kotel_elektrika_on_off', 'on') %}
      input_boolean.turn_off
      {% endif %}

- alias: "sync вхід низ по газу"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.kotel_haz_on_off
  action:
    entity_id:
      - switch.switch_relay_v2_d2
    service: >
      {% if is_state('input_boolean.kotel_haz_on_off', 'on') %}
      switch.turn_on
      {% else %}
      switch.turn_off 
      {% endif %}

- alias: "sync вхід низ по електриці"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.kotel_elektrika_on_off
  action:
    entity_id:
      - switch.switch_relay_v2_d2
    service: >
      {% if is_state('input_boolean.kotel_elektrika_on_off', 'on') and if is_state('input_boolean.kotel_haz_on_off', 'on') %}
      switch.turn_off
      {% else %}
      switch.turn_on
      {% endif %}

- alias: "sync kitchen"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.kitchen_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d4
    service: >
      {% if is_state('input_boolean.kitchen_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "sync spalnya"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.spalnya_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d5
    service: >
      {% if is_state('input_boolean.spalnya_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "sync maysternya"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.maysternya_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d6
    service: >
      {% if is_state('input_boolean.maysternya_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "sync vanna"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.vanna_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d7
    service: >
      {% if is_state('input_boolean.vanna_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "sync velika"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.velika_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d8
    service: >
      {% if is_state('input_boolean.velika_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "sync ani"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.ani_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d9
    service: >
      {% if is_state('input_boolean.ani_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "sync koridor"
  trigger:
    - platform: state
      entity_id:
        - input_boolean.koridor_btn
  action:
    entity_id:
      - switch.switch_relay_v2_d10
    service: >
      {% if is_state('input_boolean.koridor_btn', 'on') %}
      switch.turn_on
      {% else %} 
      switch.turn_off 
      {% endif %}

- alias: "kitchen rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.kitchen_night_max
        - input_number.kitchen_day_max
        - input_datetime.kitchen_start
        - input_datetime.kitchen_end
        - sensor.ble_temperature_v2_kitchen
  action:
    entity_id:
      - input_boolean.kitchen_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.kitchen_start')   %}
      {% set endTime = states('input_datetime.kitchen_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.kitchen_day_max')|int > states('sensor.ble_temperature_v2_kitchen')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.kitchen_night_max')|int > states('sensor.ble_temperature_v2_kitchen')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

- alias: "spalnya rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.spalnya_night_max
        - input_number.spalnya_day_max
        - input_datetime.spalnya_start
        - input_datetime.spalnya_end
        - sensor.ble_temperature_v2_spalnya
  action:
    entity_id:
      - input_boolean.spalnya_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.spalnya_start')   %}
      {% set endTime = states('input_datetime.spalnya_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.spalnya_day_max')|int > states('sensor.ble_temperature_v2_spalnya')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.spalnya_night_max')|int > states('sensor.ble_temperature_v2_spalnya')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

- alias: "maysternya rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.maysternya_night_max
        - input_number.maysternya_day_max
        - input_datetime.maysternya_start
        - input_datetime.maysternya_end
        - sensor.ble_temperature_v2_maysternya
  action:
    entity_id:
      - input_boolean.maysternya_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.maysternya_start')   %}
      {% set endTime = states('input_datetime.maysternya_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.maysternya_day_max')|int > states('sensor.ble_temperature_v2_maysternya')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.maysternya_night_max')|int > states('sensor.ble_temperature_v2_maysternya')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

- alias: "vanna rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.vanna_night_max
        - input_number.vanna_day_max
        - input_datetime.vanna_start
        - input_datetime.vanna_end
        - sensor.ble_temperature_v2_vanna
  action:
    entity_id:
      - input_boolean.vanna_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.vanna_start')   %}
      {% set endTime = states('input_datetime.vanna_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.vanna_day_max')|int > states('sensor.ble_temperature_v2_vanna')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.vanna_night_max')|int > states('sensor.ble_temperature_v2_vanna')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

- alias: "velika rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.velika_night_max
        - input_number.velika_day_max
        - input_datetime.velika_start
        - input_datetime.velika_end
        - sensor.ble_temperature_v2_velika
  action:
    entity_id:
      - input_boolean.velika_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.velika_start')   %}
      {% set endTime = states('input_datetime.velika_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.velika_day_max')|int > states('sensor.ble_temperature_v2_velika')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.velika_night_max')|int > states('sensor.ble_temperature_v2_velika')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

- alias: "ani rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.ani_night_max
        - input_number.ani_day_max
        - input_datetime.ani_start
        - input_datetime.ani_end
        - sensor.ble_temperature_v2_ani
  action:
    entity_id:
      - input_boolean.ani_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.ani_start')   %}
      {% set endTime = states('input_datetime.ani_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.ani_day_max')|int > states('sensor.ble_temperature_v2_ani')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.ani_night_max')|int > states('sensor.ble_temperature_v2_ani')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

- alias: "koridor rule"
  trigger:
    - platform: state
      entity_id:
        - input_number.koridor_night_max
        - input_number.koridor_day_max
        - input_datetime.koridor_start
        - input_datetime.koridor_end
        - sensor.ble_temperature_v2_koridor
  action:
    entity_id:
      - input_boolean.koridor_btn
    service: >
      {% set current_time = states('sensor.time')    %}
      {% set startTime = states('input_datetime.koridor_start')   %}
      {% set endTime = states('input_datetime.koridor_end')   %}
      {% if startTime < current_time and current_time < endTime %}
          {% if states('input_number.koridor_day_max')|int > states('sensor.ble_temperature_v2_koridor')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% else %}     
          {% if states('input_number.koridor_night_max')|int > states('sensor.ble_temperature_v2_koridor')|int %}
          input_boolean.turn_on
          {% else %} 
          input_boolean.turn_off
          {% endif %}
      {% endif %}

# - alias: "battery minimal voltage - turn off invertor"
#   trigger:
#     - platform: state
#       entity_id:
#         - sensor.battery_voltage
#   action:
#     entity_id:
#       - switch.switch_ssr_battery
#     service: >
#       {% if states('sensor.battery_voltage')|float < 25.65 %}
#       switch.turn_off
#       {% endif %}

# - alias: "battery high voltage - turn off zaryadka"
#   trigger:
#     - platform: state
#       entity_id:
#         - sensor.battery_voltage
#   action:
#     entity_id:
#       - switch.switch_ssr_battery2
#     service: >
#       {% if states('sensor.battery_voltage')|float > 26.65 %}
#       switch.turn_off
#       {% else %} 
#       switch.turn_on
#       {% endif %}

# - alias: "battery percentage"
#   trigger:
#     - platform: state
#       entity_id:
#         - sensor.battery_voltage
#     - seconds: /5
#       platform: time_pattern

#   action:
#     entity_id:
#       - input_number.battery_percentage
#     service: >
#       {% if states('sensor.battery_voltage')|float > 25 %}
#       input_number.set_value 99
#       {% elseif states('sensor.battery_voltage')|float > 24 %}
#       input_number.set_value 98
#       {% endif %}

# - alias: "battery minimal voltage - turn on load by timer"
#   trigger:
#     - minutes: /10
#       platform: time_pattern

#   action:
#     entity_id:
#       - switch.switch_ssr_battery
#     service: >
#       {% if states('sensor.battery_voltage')|float > 24 %}
#       switch.turn_on
#       {% endif %}

# 26.6 - 80 best start
# 26.4 - 70
# 26.2 - 60
# 26.1 - 50
# 26.0 - 40
# 25.8 - 30
# 25.6 - 20 best end
